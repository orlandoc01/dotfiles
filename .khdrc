# sample config for khd

# NOTE(koekeishiya): A bind is written in the form:
#                   <keysym> [!] [<app list>] [->] : <command>
#                   where
#                       <keysym>   = mode + mod + ... + mod - literal
#
#                       <keysym>   = mode + mod + ... + mod - keycode
#                                    keycode must have 0x prefix
#
#                       <keysym>   = mode + mod + ... + mod - button#
#                                    replace '#' with mouse-button id; id >= 3
#
#                       modifier only binding
#                       <keysym>   = mode + mod + ... + mod
#
#                       literal only binding
#                       <keysym>   = - literal
#
#                       keycode only binding
#                       <keysym>   = - keycode
#
#                       [<app,
#                         app,     = optional list '[app1, ..., appN]' of applications
#                         app>]      that this bind will be activated for. if the
#                                    focused application is not contained in this list,
#                                    the associated command will not be triggered, and
#                                    the keypress will be passed through as normal.
#
#                       [!]        = optional operator '!' negates the behaviour when a
#                                    list of applications is given. this marks the bind
#                                    as 'Hotkey_Exclude', causing the bind to not work
#                                    when the focused application is in the given list.
#
#                       [->]       = optional operator '->' that marks this bind as
#                                    'passthrough'. this causes the key to be passed
#                                    through to the system, instead of being consumed.
#
#                       <command>  = command is executed through '$SHELL -c' and
#                                    follows valid shell syntax. if the $SHELL environment
#                                    variable is not set, it will default to '/bin/bash'.
#                                    when bash is used, the ';' delimeter can be specified
#                                    to chain commands.
#
#                                    to allow a command to extend into multiple lines,
#                                    prepend '\' at the end of the previous line.
#
#                                    an EOL character signifies the end of the bind.

# NOTE(koekeishiya) Example of passthrough
# cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of app list
# alt - e [iTerm2, Terminal, HyperTerm] : echo "so this is how deep the rabbit hole goes.." |\
#                                       alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of negated app list
# alt - e [iTerm2, Terminal, HyperTerm] !         : echo "blue pill, i choose you!" |\
#                                                 alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Modifier only binding
# left shift    -> (    right shift   -> )
# left cmd      -> {    right cmd     -> }

# khd mod_trigger_timeout 0.1
# lshift : khd -p "shift - 8"
# rshift : khd -p "shift - 9"
# lcmd   : khd -p "shift + alt - 8"
# rcmd   : khd -p "shift + alt - 9"

# NOTE(koekeishiya) Bind mouse-buttons
# - button3 : khd -w "mouse-button 3 pressed"
# - button4 : khd -w "mouse-button 4 pressed"

# suppress unregistered keybinds outside default mode
# enabled by default! must be explicitly set to 'off'
# khd void_unlisted_bind off
 
# set border color for different modes
khd mode default  on_enter chunkc border::color 0xddd5c4a1
khd mode switcher on_enter chunkc border::color 0xddbdd322
khd mode swap     on_enter chunkc border::color 0xdd458588
khd mode tree     on_enter chunkc border::color 0xddfabd2f
khd mode space    on_enter chunkc border::color 0xddb16286
khd mode ytd      on_enter chunkc border::color 0xddd75f5f

# toggle between modes
ctrl - f                :   khd -e "mode activate switcher"
switcher + ctrl - f     :   khd -e "mode activate default"
swap + ctrl - f         :   khd -e "mode activate switcher"
space + ctrl - f        :   khd -e "mode activate switcher"
tree + ctrl - f         :   khd -e "mode activate switcher"

switcher - s            :   khd -e "mode activate swap"
switcher - t            :   khd -e "mode activate tree"
switcher - space        :   khd -e "mode activate space"

# default mode passthroughs
cmd - m              -> : echo "Minimize Window"; \
                          chunkc tiling:window --f next

# switcher mode
switcher - r            :   khd -e "reload" # reload config

switcher - return       :   khd -e "mode activate default"

switcher - h            :   chunkc tiling::window -f west
switcher - l            :   chunkc tiling::window -f east
switcher - j            :   chunkc tiling::window -f south
switcher - k            :   chunkc tiling::window -f north
switcher - z            :   chunkc tiling::window --toggle fullscreen
switcher - x            :   chunkc tiling:window --close; \
                            chunkc tiling:window --f next

switcher - b            :   chunkc tiling::desktop -l bsp
switcher - m            :   chunkc tiling::desktop -l monocle
switcher - f            :   chunkc tiling::desktop -l float


switcher + shift - n    :   chunkc tiling::window --send-to-desktop next
switcher + shift - p    :   chunkc tiling::window --send-to-desktop prev

# Switcher System Control Modifications
switcher + lctrl - up     -> : echo "Mission Control UP"
switcher + lctrl - down   -> : echo "Mission Control DOWN"
switcher + lctrl - left   -> : echo "Mission Control LEFT"
switcher + lctrl - right  -> : echo "Mission Control RIGHT"
switcher + lctrl - right  -> : echo "Mission Control RIGHT"
switcher + cmd - m        -> : echo "Minimize Window"; \
                               chunkc tiling:window --f next
switcher + cmd - w        -> : chunkc tiling:window --close; \
                               chunkc tiling:window --f next

# swap mode
swap - return           :   khd -e "mode activate default"
swap - h                :   chunkc tiling::window -s west
swap - j                :   chunkc tiling::window -s south
swap - k                :   chunkc tiling::window -s north
swap - l                :   chunkc tiling::window -s east
swap - m                :   chunkc tiling::window -s mark

swap + shift - k        :   chunkc tiling::window -w north
swap + shift - l        :   chunkc tiling::window -w east
swap + shift - j        :   chunkc tiling::window -w south
swap + shift - h        :   chunkc tiling::window -w west

# tree mode
tree - return           :   khd -e "mode activate default"
tree - r                :   chunkc tiling::desktop --rotate 90
tree - o                :   chunkc tiling::window -s prev
tree + shift - o        :   chunkc tiling::window -s next

# space mode
space - return           :   khd -e "mode activate default"

space - e               :   chunkc tiling::desktop --equalize

space - up              :   chunkc tiling::desktop -p inc
space - down            :   chunkc tiling::desktop -p dec

space + shift - up      :   chunkc tiling::desktop -g inc
space + shift - down    :   chunkc tiling::desktop -g dec
 
# vi-mode for non-terminal applications
# remap left-control h/j/k/l -> arrow keys
lctrl - h         ![HyperTerm,Terminal,iTerm2,Alacritty]      :   khd -p "- left"
lctrl - j         ![HyperTerm,Terminal,iTerm2,Alacritty]      :   khd -p "- down"
lctrl - k         ![HyperTerm,Terminal,iTerm2,Alacritty]      :   khd -p "- up"
lctrl - l         ![HyperTerm,Terminal,iTerm2,Alacritty]      :   khd -p "- right"

# default
# cmd + alt + ctrl - m    :   chunkc tiling::window -mk focused
# cmd + alt + ctrl - h    :   chunkc tiling::window -mk west wrap
# cmd + alt + ctrl - l    :   chunkc tiling::window -mk east wrap
# cmd + alt + ctrl - j    :   chunkc tiling::window -mk south wrap
# cmd + alt + ctrl - k    :   chunkc tiling::window -mk north wrap

# ytd 
# switcher - w            :   khd -e "mode activate ytd"
# ytd + ctrl - f          :   khd -e "mode activate default"
# khd mode ytd color 0xddd75f5f
#

# ytd mode
# ytd - x                 :   ytc play;\
#                             khd -e "mode activate default"
#
# ytd - s                 :   ytc mkfav;\
#                             khd -e "mode activate default"
# 0x32 == <
# ytd - 0x32              :   ytc fav
# ytd - z                 :   ytc prev
# ytd - c                 :   ytc next
# ytd - v                 :   ytc stop
# ytd - a                 :   ytc volup
# ytd - d                 :   ytc voldown
# ytd - right             :   ytc seekfw
# ytd - left              :   ytc seekbk
#
# shift + lctrl - h ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - left"
# shift + lctrl - j ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - down"
# shift + lctrl - k ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - up"
# shift + lctrl - l ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift - right"

# remap left-control 0 / 4   -> start / end of line
# lctrl - 0         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - left"
# lctrl - 4         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - right"

# remap left-control g / G   -> start / end of text
# lctrl - g         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - up"
# lctrl + shift - g ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - down"
#
# shift + lctrl - 0 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - left"
# shift + lctrl - 4 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - right"

# remap left-control b / e   -> start / end of word
# lctrl - b         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - left"
# lctrl - e         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - right"
#
# shift + lctrl - b ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - left"
# shift + lctrl - e ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - right"

# remap left-control x       -> forward delete
# lctrl - x         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- delete"
#
